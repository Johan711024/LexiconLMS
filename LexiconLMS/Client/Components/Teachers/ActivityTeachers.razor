@using LexiconLMS.Client.State;
@using LexiconLMS.Shared.DTOs;
@implements IDisposable
@inject StateContainer StateContainer

<p><b>Aktiviteter</b></p>


@foreach (var activity in courseSelectedModulesActivities)
{
    <p><EditButton Left="-5px" Top="-2px" StartEditing="()=>ChangePropertyValue(activity)" />@activity.Name</p>
}

@code {

    [Parameter]
    public IEnumerable<ActivityDto> courseSelectedModulesActivities { get; set; } = new List<ActivityDto>();

    private void doSomething()
    {
        Console.WriteLine("From activities");
    }
    [Parameter]
    public EventCallback forEditingActivities { get; set; }


    //----------------------------------------------------
    //state management

    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
    }
    private void ChangePropertyValue(ActivityDto activity)
    {
        StateContainer.EditActivity = activity;

        ChangeModalValue();

    }
    private void ChangeModalValue()
    {
        StateContainer.ModalOpen = true;
        StateContainer.ModalContentType = "EditActivity";
    }
    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}
